# These are keyed by anchor, the "id" attribute in the
# SDK documentation HTML. As such, these overrides cannot
# be used with multi-signature functions that share an id.

# Don't work with variables, only functions/callbacks/methods.

# These are overrides for typos in the Playdate SDK documention
# It is expected these will go away as things are fixed upstream.

# Print takes a variable number of arguments
["f-print"]
name = "print"
parameters = ["..."]

##########################################################
# Overrides for methods with incorrect signatures/names

# dashes in params upper-left-x, upper-left-y
["m-graphics.sprite.setBounds"]
name = "playdate.graphics.sprite:setBounds"
parameters = ["x", "y", "width", "height"]

# playdate.graphics.setStencilPattern -> playdate.graphics.sprite:setStencilPattern
["m-graphics.sprite.setStencilPattern_p"]
name = "playdate.graphics.sprite:setStencilPattern"
parameters = ["pattern"]

# playdate.graphics.setStencilPattern({ row1, row2, row3, row4, row5, row6, row7, row8 })
["m-graphics.sprite.setStencilPattern"]
name = "playdate.graphics.setStencilPattern"
parameters = ["pattern"]

# missing curvature parameter
["m-sound.synth.setADSR"]
name = "playdate.sound.synth:setADSR"
parameters = ["attack", "decay", "sustain", "release", "curvature"]

# unicode "…​" instead of "..."
["m-ui.gridview.setNumberOfRows"]
name = "playdate.ui.gridview:setNumberOfRows"
parameters = ["..."]

##########################################
# Overrides for metamethods and operators
##########################################

# playdate.graphics.imagetable[n]
["m-graphics.imagetable.__index"]
name = "playdate.graphics.imagetable:__index"
parameters = ["n"] # integer

# t1 * t2
["m-geometry.affineTransform.mul_t"]
name = "playdate.geometry.affineTransform:__mul"
parameters = ["t"] # affineTransform

# t * v
["m-geometry.affineTransform.mul_v"]
name = "playdate.geometry.affineTransform:__mul"
parameters = ["v"] # vector2D

# t * p
["m-geometry.affineTransform.mul_p"]
name = "playdate.geometry.affineTransform:__mul"
parameters = ["p"] # point2D

# p + v
["m-geometry.point.add"]
name = "playdate.geometry.point:__add"
parameters = ["v"] # vector2D

# p1 - p2
["m-geometry.point.sub"]
name = "playdate.geometry.point:__sub"
parameters = ["p2"] # point2D

# p * t
["m-geometry.point.mul"]
name = "playdate.geometry.point:__mul"
parameters = ["t"] # affineTransform

# p1 .. p2
["m-geometry.point.concat"]
name = "playdate.geometry.point:__concat"
parameters = ["p2"] # point2D

# p * t
["m-geometry.polygon.mul"]
name = "playdate.geometry.polygon:__mul"
parameters = ["t"] # affineTransform

# -v
["m-geometry.vector2D.unm"]
name = "playdate.geometry.vector2D:__unm"
parameters = []

# v1 + v2
["m-geometry.vector2D.add"]
name = "playdate.geometry.vector2D:__add"
parameters = ["v2"] # vector2D

# v1 - v2
["m-geometry.vector2D.sub"]
name = "playdate.geometry.vector2D:__sub"
parameters = ["v2"] # vector2D

# v1 * s
["m-geometry.vector2D.mul_s"]
name = "playdate.geometry.vector2D:__mul"
parameters = ["s"] # number

# v1 * v2
["m-geometry.vector2D.mul_v"]
name = "playdate.geometry.vector2D:__mul"
parameters = ["v2"] # vector2D

# v1 * t
["m-geometry.vector2D.mul_t"]
name = "playdate.geometry.vector2D:__mul"
parameters = ["t"] # affineTransform

# v1 / s
["m-geometry.vector2D.div"]
name = "playdate.geometry.vector2D:__div"
parameters = ["s"] # number

# missing parens ()
["c-keyboard.keyboardDidShowCallback"]
name = "playdate.keyboard.keyboardDidShowCallback"
parameters = []

# missing parens ()
["c-keyboard.keyboardDidHideCallback"]
name = "playdate.keyboard.keyboardDidHideCallback"
parameters = []

# missing parens ()
["c-keyboard.keyboardWillHideCallback"]
name = "playdate.keyboard.keyboardWillHideCallback"
parameters = []

# missing parens ()
["c-keyboard.keyboardAnimatingCallback"]
name = "playdate.keyboard.keyboardAnimatingCallback"
parameters = []

# missing parens ()
["c-keyboard.textChangedCallback"]
name = "playdate.keyboard.textChangedCallback"
parameters = ["ok"] # boolean

# missing parens () and is instance method only
["c-timer.timerEndedCallback"]
name = "_Timer:timerEndedCallback"
parameters = ["..."]

# missing parens () and is instance method only
["c-timer.updateCallback"]
name = "_Timer:updateCallback"
parameters = ["..."]

# missing parens () and is instance method only
["c-frameTimer.timerEndedCallback"]
name = "_FrameTimer:timerEndedCallback"
parameters = ["..."]

# missing parens () and is instance method only
["c-frameTimer.updateCallback"]
name = "_FrameTimer:updateCallback"
parameters = ["..."]

# instance method not classmethod
["m-ui.gridview.getSectionHeaderHeight"]
name = "playdate.ui.gridview:getSectionHeaderHeight"
parameters = []

# missing function parameters
["m-ui.crankIndicator.getBounds"]
name = "playdate.ui.crankIndicator:getBounds"
parameters = ["xOffset", "yOffset"]

# Callback type info is inline with functional arguments
["f-getServerTime"]
name = "playdate.getServerTime"
parameters = ["callback"]

# Fix for `function -> _function` rename
["f-network.setEnabled"]
name = "playdate.network.setEnabled"
parameters = ["flag", "callback"]

# Fix for #playdate.graphics.imagetable
["m-graphics.imagetable.__len"]
name = "playdate.graphics.imagetable:__len"
parameters = []
